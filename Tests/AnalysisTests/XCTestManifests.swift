#if !canImport(ObjectiveC)
import XCTest

extension ControlFlowGraphCreationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ControlFlowGraphCreationTests = [
        ("testBreakInDoWhileLoop", testBreakInDoWhileLoop),
        ("testBreakStatement", testBreakStatement),
        ("testContinueStatement", testContinueStatement),
        ("testContinueStatementSkippingOverRemainingOfMethod", testContinueStatementSkippingOverRemainingOfMethod),
        ("testCreateEmpty", testCreateEmpty),
        ("testCreateNestedEmptyCompoundStatementGetsFlattenedToEmptyGraph", testCreateNestedEmptyCompoundStatementGetsFlattenedToEmptyGraph),
        ("testDeferStatement", testDeferStatement),
        ("testDeferStatementInDoWhileLoop", testDeferStatementInDoWhileLoop),
        ("testDeferStatementInIf", testDeferStatementInIf),
        ("testDeferStatementInIfElse", testDeferStatementInIfElse),
        ("testDeferStatementInLoop", testDeferStatementInLoop),
        ("testDeferStatementInLoopWithBreak", testDeferStatementInLoopWithBreak),
        ("testDoStatement", testDoStatement),
        ("testDoWhileLoop", testDoWhileLoop),
        ("testEmptyDoWhileLoop", testEmptyDoWhileLoop),
        ("testEmptyForLoop", testEmptyForLoop),
        ("testEmptySwitchStatement", testEmptySwitchStatement),
        ("testEmptySwitchStatementWithFallthrough", testEmptySwitchStatementWithFallthrough),
        ("testEmptyWhileLoop", testEmptyWhileLoop),
        ("testExpression", testExpression),
        ("testExpressions", testExpressions),
        ("testForLoop", testForLoop),
        ("testIf", testIf),
        ("testIfElse", testIfElse),
        ("testIfElseIf", testIfElseIf),
        ("testInterwindedDeferStatement", testInterwindedDeferStatement),
        ("testLabeledBreakLoopDefer", testLabeledBreakLoopDefer),
        ("testLabeledBreakStatement", testLabeledBreakStatement),
        ("testLabeledContinueLoopDefer", testLabeledContinueLoopDefer),
        ("testLabeledContinueStatement", testLabeledContinueStatement),
        ("testReturnStatement", testReturnStatement),
        ("testSwitchStatement", testSwitchStatement),
        ("testSwitchStatementBreakDefer", testSwitchStatementBreakDefer),
        ("testSwitchStatementFallthrough", testSwitchStatementFallthrough),
        ("testSwitchStatementFallthroughWithDefer", testSwitchStatementFallthroughWithDefer),
        ("testSwitchStatementFallthroughWithDeferInterwindedWithReturn", testSwitchStatementFallthroughWithDeferInterwindedWithReturn),
        ("testVariableDeclaration", testVariableDeclaration),
        ("testWhileLoop", testWhileLoop),
        ("testWhileLoopWithBreak", testWhileLoopWithBreak),
    ]
}

extension DefaultUsageAnalyzerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DefaultUsageAnalyzerTests = [
        ("testFindEnumMemberUsage", testFindEnumMemberUsage),
        ("testFindMethodUsages", testFindMethodUsages),
        ("testFindMethodUsagesWithRecursiveCall", testFindMethodUsagesWithRecursiveCall),
        ("testFindPropertyUsages", testFindPropertyUsages),
        ("testFindUsagesOfLocalVariable", testFindUsagesOfLocalVariable),
        ("testFindUsagesOfLocalVariableDetectingMutatingCallsToReferenceTypes", testFindUsagesOfLocalVariableDetectingMutatingCallsToReferenceTypes),
        ("testFindUsagesOfLocalVariableDetectingMutatingCallsToValueType", testFindUsagesOfLocalVariableDetectingMutatingCallsToValueType),
        ("testFindUsagesOfLocalVariableDetectingWritingUsages", testFindUsagesOfLocalVariableDetectingWritingUsages),
        ("testFindUsagesOfLocalVariableDetectingWritingUsagesOfPointerType", testFindUsagesOfLocalVariableDetectingWritingUsagesOfPointerType),
        ("testFindUsagesOfLocalVariableDetectingWritingUsagesOfPostfixType", testFindUsagesOfLocalVariableDetectingWritingUsagesOfPostfixType),
        ("testFindUsagesOfLocalVariableDetectingWritingUsagesOfReferenceFields", testFindUsagesOfLocalVariableDetectingWritingUsagesOfReferenceFields),
        ("testFindUsagesOfLocalVariableDoesNotReportWritingUsagesWhenMutatingFieldsOfReferenceType", testFindUsagesOfLocalVariableDoesNotReportWritingUsagesWhenMutatingFieldsOfReferenceType),
        ("testFindUsagesOfSuperclassMemberInSubclassInstances", testFindUsagesOfSuperclassMemberInSubclassInstances),
    ]
}

extension ReachingDefinitionAnalysisTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReachingDefinitionAnalysisTests = [
        ("testForLoop", testForLoop),
        ("testIf", testIf),
        ("testIfElse", testIfElse),
        ("testIfLet", testIfLet),
        ("testVarDecl", testVarDecl),
        ("testVarDeclReplace", testVarDeclReplace),
        ("testVarDeclWithNoInitialization", testVarDeclWithNoInitialization),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ControlFlowGraphCreationTests.__allTests__ControlFlowGraphCreationTests),
        testCase(DefaultUsageAnalyzerTests.__allTests__DefaultUsageAnalyzerTests),
        testCase(ReachingDefinitionAnalysisTests.__allTests__ReachingDefinitionAnalysisTests),
    ]
}
#endif
