#if !canImport(ObjectiveC)
import XCTest

extension CLibGlobalsProvidersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CLibGlobalsProvidersTests = [
        ("testDefinedMathLibFunctions", testDefinedMathLibFunctions),
    ]
}

extension DefaultGlobalsProvidersSourceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DefaultGlobalsProvidersSourceTests = [
        ("testDefaultProviders", testDefaultProviders),
    ]
}

extension OpenGLESGlobalsProviderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OpenGLESGlobalsProviderTests = [
        ("testDefinedFunctions", testDefinedFunctions),
        ("testDefinedTypealiases", testDefinedTypealiases),
        ("testDefinedVars", testDefinedVars),
    ]
}

extension UIKitGlobalsProviderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UIKitGlobalsProviderTests = [
        ("testDefinedUIGraphicsGetCurrentContext", testDefinedUIGraphicsGetCurrentContext),
        ("testDefinedUILayoutConstraintAxis", testDefinedUILayoutConstraintAxis),
        ("testDefinedUILayoutFittingCompressedSize", testDefinedUILayoutFittingCompressedSize),
        ("testDefinedUILayoutFittingExpandedSize", testDefinedUILayoutFittingExpandedSize),
        ("testDefinedUIScrollView", testDefinedUIScrollView),
        ("testDefinedUITableView", testDefinedUITableView),
        ("testDefinedUITableViewAutomaticDimension", testDefinedUITableViewAutomaticDimension),
        ("testDefinedUITableViewCell", testDefinedUITableViewCell),
        ("testDefinedUIViewController", testDefinedUIViewController),
        ("testDefinedUIViewNoIntrinsicMetric", testDefinedUIViewNoIntrinsicMetric),
        ("testDefinedUIWindow", testDefinedUIWindow),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CLibGlobalsProvidersTests.__allTests__CLibGlobalsProvidersTests),
        testCase(DefaultGlobalsProvidersSourceTests.__allTests__DefaultGlobalsProvidersSourceTests),
        testCase(OpenGLESGlobalsProviderTests.__allTests__OpenGLESGlobalsProviderTests),
        testCase(UIKitGlobalsProviderTests.__allTests__UIKitGlobalsProviderTests),
    ]
}
#endif
