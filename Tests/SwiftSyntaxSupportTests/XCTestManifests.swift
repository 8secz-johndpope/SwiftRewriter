#if !canImport(ObjectiveC)
import XCTest

extension ModifiersSyntaxDecoratorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ModifiersSyntaxDecoratorsTests = [
        ("testAccessLevelModifiersDecorator", testAccessLevelModifiersDecorator),
        ("testConvenienceInitModifierDecorator", testConvenienceInitModifierDecorator),
        ("testDefaultModifiersDecoratorApplier", testDefaultModifiersDecoratorApplier),
        ("testMutatingModifiersDecorator", testMutatingModifiersDecorator),
        ("testMutatingModifiersDecoratorDoesNotProduceMutatingForClassTypes", testMutatingModifiersDecoratorDoesNotProduceMutatingForClassTypes),
        ("testMutatingModifiersDecoratorDoesNotProduceMutatingForNonMutatingMethods", testMutatingModifiersDecoratorDoesNotProduceMutatingForNonMutatingMethods),
        ("testOverrideModifierDecorator", testOverrideModifierDecorator),
        ("testOwnershipModifierDecoratorWithIntention", testOwnershipModifierDecoratorWithIntention),
        ("testOwnershipModifierDecoratorWithVarDecl", testOwnershipModifierDecoratorWithVarDecl),
        ("testPropertySetterAccessModifiersDecorator", testPropertySetterAccessModifiersDecorator),
        ("testProtocolOptionalModifierDecorator", testProtocolOptionalModifierDecorator),
        ("testStaticModifiersDecoratorWithGlobalVariable", testStaticModifiersDecoratorWithGlobalVariable),
        ("testStaticModifiersDecoratorWithMethod", testStaticModifiersDecoratorWithMethod),
        ("testStaticModifiersDecoratorWithProperty", testStaticModifiersDecoratorWithProperty),
    ]
}

extension SwiftSyntaxProducerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftSyntaxProducerTests = [
        ("testGenerateEmptyFile", testGenerateEmptyFile),
        ("testGenerateExpressionTypes", testGenerateExpressionTypes),
        ("testGenerateFileWithClassWithComputedProperty", testGenerateFileWithClassWithComputedProperty),
        ("testGenerateFileWithClassWithField", testGenerateFileWithClassWithField),
        ("testGenerateFileWithClassWithFieldAndProperty", testGenerateFileWithClassWithFieldAndProperty),
        ("testGenerateFileWithClassWithGetterAndSetterProperties", testGenerateFileWithClassWithGetterAndSetterProperties),
        ("testGenerateFileWithClassWithInheritance", testGenerateFileWithClassWithInheritance),
        ("testGenerateFileWithClassWithInit", testGenerateFileWithClassWithInit),
        ("testGenerateFileWithClassWithMethod", testGenerateFileWithClassWithMethod),
        ("testGenerateFileWithClassWithProperty", testGenerateFileWithClassWithProperty),
        ("testGenerateFileWithClassWithProtocolConformances", testGenerateFileWithClassWithProtocolConformances),
        ("testGenerateFileWithEmptyClass", testGenerateFileWithEmptyClass),
        ("testGenerateFileWithEmptyClasses", testGenerateFileWithEmptyClasses),
        ("testGenerateFileWithEmptyEnum", testGenerateFileWithEmptyEnum),
        ("testGenerateFileWithEmptyFunction", testGenerateFileWithEmptyFunction),
        ("testGenerateFileWithEnumWithOneCase", testGenerateFileWithEnumWithOneCase),
        ("testGenerateFileWithExtension", testGenerateFileWithExtension),
        ("testGenerateFileWithFunctionBody", testGenerateFileWithFunctionBody),
        ("testGenerateFileWithGlobalFunction", testGenerateFileWithGlobalFunction),
        ("testGenerateFileWithGlobalFunctionWithReturnType", testGenerateFileWithGlobalFunctionWithReturnType),
        ("testGenerateFileWithOwnershippedGlobalVariables", testGenerateFileWithOwnershippedGlobalVariables),
        ("testGenerateFileWithProtocol", testGenerateFileWithProtocol),
        ("testGenerateFileWithProtocolWithInitializerAndMethodRequirements", testGenerateFileWithProtocolWithInitializerAndMethodRequirements),
        ("testGenerateFileWithStruct", testGenerateFileWithStruct),
        ("testGenerateFileWithTypealias", testGenerateFileWithTypealias),
        ("testGenerateImportDirective", testGenerateImportDirective),
        ("testGenerateIntentionHistory", testGenerateIntentionHistory),
        ("testGenerateIntentionHistoryAndComments", testGenerateIntentionHistoryAndComments),
        ("testGenerateMultipleImportDirectives", testGenerateMultipleImportDirectives),
        ("testGeneratePreprocessorDirectivesInEmptyFile", testGeneratePreprocessorDirectivesInEmptyFile),
        ("testGeneratePreprocessorDirectivesInPopulatedFile", testGeneratePreprocessorDirectivesInPopulatedFile),
        ("testGenerateSubscript", testGenerateSubscript),
        ("testGenerateSubscriptGetterAndSetter", testGenerateSubscriptGetterAndSetter),
        ("testGenerateVariableDeclarationTypes", testGenerateVariableDeclarationTypes),
        ("testWriteClassAttributes", testWriteClassAttributes),
        ("testWriteConvenienceInit", testWriteConvenienceInit),
        ("testWriteEnumAttributes", testWriteEnumAttributes),
        ("testWriteExtensionAttributes", testWriteExtensionAttributes),
        ("testWriteFailableInit", testWriteFailableInit),
        ("testWriteMethodAttributes", testWriteMethodAttributes),
        ("testWritePropertyAttributes", testWritePropertyAttributes),
        ("testWriteProtocolAttributes", testWriteProtocolAttributes),
        ("testWriteStructAttributes", testWriteStructAttributes),
    ]
}

extension SwiftSyntaxProducer_ExpTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftSyntaxProducer_ExpTests = [
        ("testArrayLiteralEmpty", testArrayLiteralEmpty),
        ("testArrayLiteralMultipleItems", testArrayLiteralMultipleItems),
        ("testArrayLiteralOneItem", testArrayLiteralOneItem),
        ("testAssignment", testAssignment),
        ("testBinary", testBinary),
        ("testCast", testCast),
        ("testClosure", testClosure),
        ("testClosureEmitsTypeSignatureWhenExpectedTypeAndActualTypesMismatch", testClosureEmitsTypeSignatureWhenExpectedTypeAndActualTypesMismatch),
        ("testClosureOmitsTypeSignatureWhenExpectedTypeAndActualTypesMatch", testClosureOmitsTypeSignatureWhenExpectedTypeAndActualTypesMatch),
        ("testClosureWithParameters", testClosureWithParameters),
        ("testConstantBoolean", testConstantBoolean),
        ("testConstantFloat", testConstantFloat),
        ("testConstantInt", testConstantInt),
        ("testConstantNil", testConstantNil),
        ("testConstantRaw", testConstantRaw),
        ("testConstantString", testConstantString),
        ("testDictionaryLiteralEmpty", testDictionaryLiteralEmpty),
        ("testDictionaryLiteralMultipleItems", testDictionaryLiteralMultipleItems),
        ("testDictionaryLiteralOneItem", testDictionaryLiteralOneItem),
        ("testIdentifier", testIdentifier),
        ("testOptionalCast", testOptionalCast),
        ("testParens", testParens),
        ("testPostfixForcedFunctionCall", testPostfixForcedFunctionCall),
        ("testPostfixForcedMember", testPostfixForcedMember),
        ("testPostfixForcedSubscript", testPostfixForcedSubscript),
        ("testPostfixFunctionCall", testPostfixFunctionCall),
        ("testPostfixFunctionCallWithTrailingClosure", testPostfixFunctionCallWithTrailingClosure),
        ("testPostfixMember", testPostfixMember),
        ("testPostfixOptionalFunctionCall", testPostfixOptionalFunctionCall),
        ("testPostfixOptionalMember", testPostfixOptionalMember),
        ("testPostfixOptionalSubscript", testPostfixOptionalSubscript),
        ("testPostfixSubscript", testPostfixSubscript),
        ("testPostfixSubscriptEmptyArguments", testPostfixSubscriptEmptyArguments),
        ("testPostfixSubscriptMultipleArguments", testPostfixSubscriptMultipleArguments),
        ("testPrefix", testPrefix),
        ("testSequentialBinaryExpression", testSequentialBinaryExpression),
        ("testSizeOfType", testSizeOfType),
        ("testSizeOfValue", testSizeOfValue),
        ("testTernary", testTernary),
        ("testTuple", testTuple),
        ("testTupleNestedInExpression", testTupleNestedInExpression),
        ("testUnary", testUnary),
    ]
}

extension SwiftSyntaxProducer_StmtTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftSyntaxProducer_StmtTests = [
        ("testBreakStatement", testBreakStatement),
        ("testBreakStatementWithLabel", testBreakStatementWithLabel),
        ("testComment", testComment),
        ("testCommentAndLabel", testCommentAndLabel),
        ("testCommentAndLabelInLabelableStatement", testCommentAndLabelInLabelableStatement),
        ("testContinueStatement", testContinueStatement),
        ("testContinueStatementWithLabel", testContinueStatementWithLabel),
        ("testDeferStatement", testDeferStatement),
        ("testDoStatement", testDoStatement),
        ("testExpressions", testExpressions),
        ("testExpressionsInCompound", testExpressionsInCompound),
        ("testFallthroughStatement", testFallthroughStatement),
        ("testForStatement", testForStatement),
        ("testIfElseIfElseStatement", testIfElseIfElseStatement),
        ("testIfElseStatement", testIfElseStatement),
        ("testIfLetElseStatement", testIfLetElseStatement),
        ("testIfLetStatement", testIfLetStatement),
        ("testIfStatement", testIfStatement),
        ("testLabeledDoStatement", testLabeledDoStatement),
        ("testLabeledExpressionStatement", testLabeledExpressionStatement),
        ("testLabeledForInStatement", testLabeledForInStatement),
        ("testLabeledIfStatement", testLabeledIfStatement),
        ("testLabeledRepeatWhileStatement", testLabeledRepeatWhileStatement),
        ("testLabeledSwitchStatement", testLabeledSwitchStatement),
        ("testLabeledWhileStatement", testLabeledWhileStatement),
        ("testRepeatWhileStatement", testRepeatWhileStatement),
        ("testReturnStatement", testReturnStatement),
        ("testReturnStatementWithExpression", testReturnStatementWithExpression),
        ("testSplitMixedConstantVariableDeclarationsInCompound", testSplitMixedConstantVariableDeclarationsInCompound),
        ("testSwitchStatementEmpty", testSwitchStatementEmpty),
        ("testSwitchStatementFull", testSwitchStatementFull),
        ("testSwitchStatementOneCase", testSwitchStatementOneCase),
        ("testSwitchStatementOneCaseWithDefault", testSwitchStatementOneCaseWithDefault),
        ("testSwitchStatementTwoCases", testSwitchStatementTwoCases),
        ("testTrailingComment", testTrailingComment),
        ("testTrailingCommentInSplitExpressionsStatement", testTrailingCommentInSplitExpressionsStatement),
        ("testTrailingCommentInStatement", testTrailingCommentInStatement),
        ("testUnknownStatement", testUnknownStatement),
        ("testVariableDeclarationsInCompound", testVariableDeclarationsInCompound),
        ("testVariableDeclarationsStatement", testVariableDeclarationsStatement),
        ("testWhileStatement", testWhileStatement),
    ]
}

extension SwiftTypeConversionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftTypeConversionTests = [
        ("testTypeNameString", testTypeNameString),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ModifiersSyntaxDecoratorsTests.__allTests__ModifiersSyntaxDecoratorsTests),
        testCase(SwiftSyntaxProducerTests.__allTests__SwiftSyntaxProducerTests),
        testCase(SwiftSyntaxProducer_ExpTests.__allTests__SwiftSyntaxProducer_ExpTests),
        testCase(SwiftSyntaxProducer_StmtTests.__allTests__SwiftSyntaxProducer_StmtTests),
        testCase(SwiftTypeConversionTests.__allTests__SwiftTypeConversionTests),
    ]
}
#endif
