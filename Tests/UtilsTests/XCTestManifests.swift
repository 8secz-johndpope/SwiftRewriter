#if !canImport(ObjectiveC)
import XCTest

extension ConcurrentValueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConcurrentValueTests = [
        ("testPerformanceConcurrentModification", testPerformanceConcurrentModification),
        ("testPerformanceConcurrentReading", testPerformanceConcurrentReading),
        ("testPerformanceConcurrentReadingAndModification", testPerformanceConcurrentReadingAndModification),
        ("testPerformancePropertyWrapperConcurrentModification", testPerformancePropertyWrapperConcurrentModification),
        ("testPerformancePropertyWrapperConcurrentModification_ProjectedValue", testPerformancePropertyWrapperConcurrentModification_ProjectedValue),
        ("testPerformancePropertyWrapperConcurrentModification_WrappedValue", testPerformancePropertyWrapperConcurrentModification_WrappedValue),
        ("testPerformancePropertyWrapperConcurrentReading", testPerformancePropertyWrapperConcurrentReading),
        ("testPerformancePropertyWrapperConcurrentReadingAndModification", testPerformancePropertyWrapperConcurrentReadingAndModification),
    ]
}

extension MutexTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MutexTests = [
        ("testMutex", testMutex),
        ("testTryLock", testTryLock),
    ]
}

extension PathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathTests = [
        ("testAppendingPathComponent", testAppendingPathComponent),
        ("testDeletingLastPathComponent", testDeletingLastPathComponent),
        ("testDeletingPathExtension", testDeletingPathExtension),
        ("testLastPathComponent", testLastPathComponent),
    ]
}

extension StringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringTests = [
        ("testCommentSectionRanges", testCommentSectionRanges),
        ("testCommentSectionRangesEntireString", testCommentSectionRangesEntireString),
        ("testCommentSectionRangesEntireStringMultiLine", testCommentSectionRangesEntireStringMultiLine),
        ("testCommentSectionRangesIgnoresCommentsInStringLiterals", testCommentSectionRangesIgnoresCommentsInStringLiterals),
        ("testCommentSectionRangesIgnoresStringLiteralsWithinMultiLineComments", testCommentSectionRangesIgnoresStringLiteralsWithinMultiLineComments),
        ("testCommentSectionRangesIgnoresStringLiteralsWithinSingleLineComments", testCommentSectionRangesIgnoresStringLiteralsWithinSingleLineComments),
        ("testCommentSectionRangesInEmptyString", testCommentSectionRangesInEmptyString),
        ("testCommentSectionRangesOpenMultiLineComment", testCommentSectionRangesOpenMultiLineComment),
        ("testLineRangesWithCountedLines", testLineRangesWithCountedLines),
        ("testLineRangesWithEmptyFinalLine", testLineRangesWithEmptyFinalLine),
        ("testLineRangesWithEmptyLines", testLineRangesWithEmptyLines),
        ("testLineRangesWithEmptyString", testLineRangesWithEmptyString),
        ("testLineRangesWithSingleEmptyLine", testLineRangesWithSingleEmptyLine),
        ("testLineRangesWithSingleLine", testLineRangesWithSingleLine),
        ("testLineRangesWithTwoEmptyFinalLines", testLineRangesWithTwoEmptyFinalLines),
        ("testLowercasedFirstLetter", testLowercasedFirstLetter),
        ("testMakeDifference", testMakeDifference),
        ("testMakeDifferenceBetweenEqualStrings", testMakeDifferenceBetweenEqualStrings),
        ("testMakeDifferenceBetweenLines", testMakeDifferenceBetweenLines),
        ("testMakeDifferenceBetweenStringsAtBeginning", testMakeDifferenceBetweenStringsAtBeginning),
        ("testStartsUppercased", testStartsUppercased),
        ("testTrimWhitespace", testTrimWhitespace),
        ("testUppercasedFirstLetter", testUppercasedFirstLetter),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ConcurrentValueTests.__allTests__ConcurrentValueTests),
        testCase(MutexTests.__allTests__MutexTests),
        testCase(PathTests.__allTests__PathTests),
        testCase(StringTests.__allTests__StringTests),
    ]
}
#endif
